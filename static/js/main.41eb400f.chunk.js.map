{"version":3,"sources":["App.tsx","pages/HomePage.tsx","pages/TabsPage.tsx","pages/NotFoundPage.tsx","routes/Root.tsx","index.tsx"],"names":["getNavClass","isActive","classNames","App","className","to","HomePage","tabs","id","title","content","TabsPage","tabId","useParams","tabContent","some","tab","find","map","NotFoundPage","Root","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"gPAOMA,EAAc,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SACrB,OAAOC,IAAW,cAAe,CAAE,YAAaD,KAGrCE,EAAM,WACjB,OAEI,qCACE,qBACEC,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CAASC,GAAG,IAAID,UAAWJ,EAA3B,kBACA,cAAC,IAAD,CAASK,GAAG,QAAQD,UAAWJ,EAA/B,yBAKN,qBAAKI,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,YC7BCE,EAAW,WACtB,OAAO,oBAAIF,UAAU,QAAd,wBCGHG,EAAO,CACX,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBAG7BC,EAAW,WAAO,IAAD,EACpBC,EAAUC,cAAVD,MAEFE,EAAaP,EAAKQ,MAAK,SAAAC,GAAG,OAAIA,EAAIR,KAAOI,KAA5B,UACfL,EAAKU,MAAK,SAAAD,GAAG,OAAIA,EAAIR,KAAOI,YADb,aACf,EAAoCF,QACpC,sBAEJ,OACE,qCACE,oBAAIN,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,6BACGG,EAAKW,KAAI,SAAAF,GAAG,OACX,oBAEE,UAAQ,MACRZ,UAAWF,IAAW,CAAE,YAAaU,IAAUI,EAAIR,KAHrD,SAKE,cAAC,IAAD,CAAMH,GAAE,aAAQW,EAAIR,IAApB,SAA2BQ,EAAIP,SAJ1BO,EAAIR,WAUjB,qBAAKJ,UAAU,QAAQ,UAAQ,aAA/B,SACGU,QClCIK,EAAe,WAG1B,MAAoB,SAFLN,cAEJ,KACF,cAAC,IAAD,CAAUR,GAAG,OAGf,oBAAID,UAAU,QAAd,6BCHIgB,EAAO,kBAClB,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,eAAC,IAAD,CAAOD,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,SAEhC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,cCZjCE,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.41eb400f.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { NavLink, Outlet } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst getNavClass = ({ isActive }: { isActive: boolean }) => {\n  return classNames('navbar-item', { 'is-active': isActive });\n};\n\nexport const App = () => {\n  return (\n    (\n      <>\n        <nav\n          className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n          data-cy=\"Nav\"\n        >\n          <div className=\"container\">\n            <div className=\"navbar-brand\">\n              <NavLink to=\"/\" className={getNavClass}>Home</NavLink>\n              <NavLink to=\"/tabs\" className={getNavClass}>Tabs</NavLink>\n            </div>\n          </div>\n        </nav>\n\n        <div className=\"section\">\n          <div className=\"container\">\n            <Outlet />\n          </div>\n        </div>\n      </>\n    )\n  );\n};\n","export const HomePage = () => {\n  return <h1 className=\"title\">Home page</h1>;\n};\n","import { Link, useParams } from 'react-router-dom';\n\nimport classNames from 'classnames';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage = () => {\n  const { tabId } = useParams();\n\n  const tabContent = tabs.some(tab => tab.id === tabId)\n    ? tabs.find(tab => tab.id === tabId)?.content\n    : 'Please select a tab';\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              data-cy=\"Tab\"\n              className={classNames({ 'is-active': tabId === tab.id })}\n            >\n              <Link to={`../${tab.id}`}>{tab.title}</Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabContent}\n      </div>\n    </>\n  );\n};\n","import { Navigate, useParams } from 'react-router-dom';\n\nexport const NotFoundPage = () => {\n  const params = useParams();\n\n  if (params['*'] === 'home') {\n    return <Navigate to=\"..\" />;\n  }\n\n  return <h1 className=\"title\">Page not found</h1>;\n};\n","import { HashRouter, Route, Routes } from 'react-router-dom';\nimport { App } from '../App';\nimport { HomePage } from '../pages/HomePage';\nimport { TabsPage } from '../pages/TabsPage';\nimport { NotFoundPage } from '../pages/NotFoundPage';\n\nexport const Root = () => (\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"tabs\">\n          <Route index element={<TabsPage />} />\n          <Route path=\":tabId\" element={<TabsPage />} />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </HashRouter>\n);\n","import ReactDOM from 'react-dom';\nimport { Root } from './routes/Root';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}